<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cen.dubboprovider.mapper.UserMapper">
    <resultMap type="User" id="UserinfoMap">
        <result column="account" property="account" />
        <result column="user_name" property="user_name" />
        <result column="sex" property="sex" />
        <result column="tel" property="tel" />
        <result column="email" property="email" />
        <result column="ic_card" property="ic_card"/>
        <result column="birthday" property="birthday" />
        <result column="stayintime" property="stayintime"/>
        <!-- 配置映射的关联用户信息 -->
        <!-- association：用于映射关联查询单个对象的信息 property：要将关联查询的用户信息映射到Orders中哪个属性 -->
        <association property="dormitory" javaType="com.cen.dubboapi.entity.Dormitory">
            <!-- id：关联查询用户的唯一标识 column：指定唯一标识用户信息的列 javaType：映射到user的哪个属性 -->
            <!-- <id column="user_id" property="id" />-->
            <result column="dormitory_name" property="dormitory_name" />
            <result column="floor" property="floor" />
            <result column="room" property="room" />
            <result column="sumbed" property="sumbed" />
            <result column="leftbed" property="leftbed" />
        </association>
        <association property="dept" javaType="com.cen.dubboapi.entity.Dept">
            <result column="dept_name" property="dept_name" />
        </association>
        <association property="position" javaType="com.cen.dubboapi.entity.Position">
            <result column="position_name" property="position_name" />
        </association>
    </resultMap>
    <select id="getUserByName" parameterType="String" resultMap="UserinfoMap">
        select d.account,d.user_name,d.birthday,d.email,d.ic_card,d.sex,d.tel,a.dept_name,b.room,b.sumbed,b.leftbed,b.dormitory_name,b.floor,c.position_name
from s_dept a,s_dormitory b,s_position c,s_user d
where a.id = d.dept
and b.id = d.dormitory
and c.id = d.position
and d.account = #{account}
    </select>
    <select id="getUser" parameterType="Login" resultType="Login">
        select * from s_login WHERE account=#{account} and binary password = #{password}
    </select>
    <select id="getUserByAccount" parameterType="String" resultType="User">
        SELECT * from s_user WHERE account = #{account}
    </select>
    <insert id="insertUser" parameterType="java.util.Map">
        insert INTO s_user(account,user_name,sex,email, tel,ic_card,location,dept,position,description)
        values(#{account},#{user_name},#{sex},#{email},#{tel},#{ic_card},#{location},#{dept},#{position},#{description});
        INSERT INTO s_login(account,password) values(#{account},#{account})
    </insert>
</mapper>
